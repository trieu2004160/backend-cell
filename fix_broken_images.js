const { Sequelize, QueryTypes } = require("sequelize");
require("dotenv").config();

const sequelize = new Sequelize(
  process.env.DB_NAME,
  process.env.DB_USER,
  process.env.DB_PASSWORD,
  {
    host: process.env.DB_HOST,
    port: process.env.DB_PORT,
    dialect: "postgres",
    logging: false,
  }
);

const updateBrokenImages = async () => {
  try {
    console.log("üîç T√¨m c√°c h√¨nh ·∫£nh b·ªã l·ªói...");

    // T√¨m t·∫•t c·∫£ variants c√≥ h√¨nh ·∫£nh b·ªã l·ªói
    const brokenImages = [
      "iphone-15-pro-max-blue_2.png",
      "iphone-15-pro-max-white_2.png",
      "iphone-15-pro-max-black_2.png",
    ];

    for (const brokenImg of brokenImages) {
      console.log(`\nüîß X·ª≠ l√Ω h√¨nh ·∫£nh: ${brokenImg}`);

      // T√¨m variants c√≥ h√¨nh n√†y
      const variants = await sequelize.query(
        `SELECT id, product_id, color, storage, image_url 
         FROM product_variants 
         WHERE image_url LIKE '%${brokenImg}%'`,
        { type: QueryTypes.SELECT }
      );

      console.log(`üìã T√¨m th·∫•y ${variants.length} variants c√≥ h√¨nh n√†y:`);
      variants.forEach((v) => {
        console.log(
          `   - ID: ${v.id}, Color: ${v.color}, Storage: ${v.storage}`
        );
      });

      if (variants.length > 0) {
        // T·∫°o URL h√¨nh m·ªõi d·ª±a v√†o m√†u s·∫Øc
        let newImageUrl = "";
        if (brokenImg.includes("blue")) {
          newImageUrl =
            "https://cdn2.cellphones.com.vn/insecure/rs:fill:0:358/q:90/plain/https://cellphones.com.vn/media/catalog/product/i/p/iphone-15-pro-max-xanh-duong.png";
        } else if (brokenImg.includes("white")) {
          newImageUrl =
            "https://cdn2.cellphones.com.vn/insecure/rs:fill:0:358/q:90/plain/https://cellphones.com.vn/media/catalog/product/i/p/iphone-15-pro-max-trang.png";
        } else if (brokenImg.includes("black")) {
          newImageUrl =
            "https://cdn2.cellphones.com.vn/insecure/rs:fill:0:358/q:90/plain/https://cellphones.com.vn/media/catalog/product/i/p/iphone-15-pro-max-den.png";
        }

        if (newImageUrl) {
          console.log(`‚úÖ C·∫≠p nh·∫≠t th√†nh: ${newImageUrl}`);

          const updateResult = await sequelize.query(
            `UPDATE product_variants 
             SET image_url = '${newImageUrl}' 
             WHERE image_url LIKE '%${brokenImg}%'`,
            { type: QueryTypes.UPDATE }
          );

          console.log(`‚úÖ ƒê√£ c·∫≠p nh·∫≠t ${updateResult[1]} records`);
        } else {
          console.log(`‚ùå Kh√¥ng t√¨m th·∫•y h√¨nh thay th·∫ø cho ${brokenImg}`);
        }
      }
    }

    console.log("\nüéâ Ho√†n th√†nh c·∫≠p nh·∫≠t h√¨nh ·∫£nh!");
  } catch (error) {
    console.error("‚ùå L·ªói:", error);
  } finally {
    process.exit();
  }
};

updateBrokenImages();
